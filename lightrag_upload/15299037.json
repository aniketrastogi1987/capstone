{
  "date_produced": "20180411",
  "publication_number": "US20180114109A1-20180426",
  "main_ipcr_label": "G06N304",
  "decision": "PENDING",
  "application_number": "15299037",
  "inventor_list": [
    {
      "inventor_name_last": "LI",
      "inventor_name_first": "Yazhao",
      "inventor_city": "Tianjin",
      "inventor_state": "",
      "inventor_country": "CN"
    }
  ],
  "abstract": "In accordance with an example embodiment of the present invention, a method comprising: obtaining a plurality of training cases; initializing a filter corresponding to each convolutional layer in a convolutional neural network, wherein the convolutional neural network comprises at least one convolutional layer; applying a squashing function on the filter; computing convolutions of patches from the plurality of training images and the filter which has applied the squashing function; and obtaining parameters of the squashing function and parameters of the filter based on the computed convolutions.",
  "filing_date": "20161020",
  "patent_number": "None",
  "summary": "<SOH> SUMMARY <EOH>Various aspects of examples of the invention are set out in the claims. According to a first aspect of the present invention, a method comprising: obtaining a plurality of training cases; initializing a filter corresponding to each convolutional layer in a convolutional neural network, wherein the convolutional neural network comprises at least one convolutional layer; applying a squashing function on the filter; computing convolutions of patches from the plurality of training images and the filter which has applied the squashing function; and obtaining parameters of the squashing function and parameters of the filter based on the computed convolutions. According to a second aspect of the present invention, A non-transitory computer storage medium encoded with a computer program, the program comprising instructions that when executed by one or more computers cause the one or more computers to perform operations comprising: obtaining a plurality of training cases; initializing a filter corresponding to each convolutional layer in a convolutional neural network, wherein the convolutional neural network comprises at least one convolutional layer; applying a squashing function on the filter; computing convolutions of patches from the plurality of training images and the filter which has applied the squashing function; and obtaining parameters of the squashing function and parameters of the filter based on the computed convolutions. According to a third aspect of the present invention, a system comprising: obtaining a plurality of training cases; initializing a filter corresponding to each convolutional layer in a convolutional neural network, wherein the convolutional neural network comprises at least one convolutional layer; applying a squashing function on the filter; computing convolutions of patches from the plurality of training images and the filter which has applied the squashing function; and obtaining parameters of the squashing function and ...",
  "date_published": "20180426",
  "title": "DEEP CONVOLUTIONAL NEURAL NETWORKS WITH SQUASHED FILTERS",
  "ipcr_labels": [
    "G06N304",
    "G06N308",
    "G06F1711"
  ],
  "_processing_info": {
    "original_size": 27293,
    "optimized_size": 3162,
    "reduction_percent": 88.41
  }
}