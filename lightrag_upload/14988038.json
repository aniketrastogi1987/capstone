{
  "date_produced": "20160628",
  "publication_number": "US20160203405A1-20160714",
  "main_ipcr_label": "G06N504",
  "decision": "ACCEPTED",
  "application_number": "14988038",
  "inventor_list": [
    {
      "inventor_name_last": "Laxmanan",
      "inventor_name_first": "Kasilingam Basker",
      "inventor_city": "West Chester",
      "inventor_state": "PA",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Chen",
      "inventor_name_first": "Yudong",
      "inventor_city": "Greenwood Village",
      "inventor_state": "CO",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Song",
      "inventor_name_first": "Peng",
      "inventor_city": "Wilmington",
      "inventor_state": "DE",
      "inventor_country": "US"
    }
  ],
  "abstract": "A system for translating a boosting algorithm includes an interface communicatively coupled to a processor. The interface is operable to receive a trained boosting model. The processor is operable to identify a plurality of split-node variables associated with the trained boosting model. Each of the plurality of split-node variables comprises a variable name, a cutoff point, and a weight. The processor may aggregate the split-node variables by variable name and cutoff point and then combine the weights of each of the plurality of split-node variables having the same variable name and cutoff point. The processor may then create a linear model based on the combined variables. The processor may further create a performance scorecard based on the combined weight, and create a model evaluation based on the error rate of the trained boosting model.",
  "filing_date": "20160105",
  "patent_number": "9483734",
  "summary": "<SOH> SUMMARY OF THE DISCLOSURE <EOH>In accordance with the present disclosure, disadvantages and problems associated with predictive modeling may be reduced or eliminated. According to one embodiment of the present disclosure, a system for translating a boosting module includes an interface, a memory, and a processor. The interface is operable to receive a trained boosting model. The processor is operable to identify a plurality of split-node variables associated with the trained boosting model, wherein each of the plurality of split-node variables comprise a variable name, a cutoff point, and a weight. The processor may also aggregate the split-node variables by variable name and cutoff point and combine the weights of each of the plurality of split-node variables having the same variable name and cutoff point. The processor may then create a linear model based on the combined split-node variables. According to one embodiment of the present disclosure, a method for translating a boosting algorithm comprises receiving, at an interface, a trained boosting model and identifying a plurality of split-node variables associated with the trained boosting model. Each of the plurality of split-node variables includes a variable name, a cutoff point, and a weight. The split-node variables are then aggregated by variable name and cutoff point. The weights of each split-node variable having the same variable name and cutoff point may then be combined. A linear model may then be created based on the combined split-node variables. Certain embodiments of the invention may provide one or more technical advantages. One advantage of the present disclosure overcomes the traditional problem of predictive model interpretability. Another advantage allows for the running of multiple predictive models in parallel without increasing running time or computational resources. Embodiments of the present disclosure reduce the complexity of the algorithm used to find an optimal split node from O...",
  "date_published": "20160714",
  "title": "TRANSFORMING PREDICTIVE MODELS",
  "ipcr_labels": [
    "G06N504",
    "G06N9900"
  ],
  "_processing_info": {
    "original_size": 62991,
    "optimized_size": 3702,
    "reduction_percent": 94.12
  }
}