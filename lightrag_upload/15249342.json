{
  "date_produced": "20170214",
  "publication_number": "US20170061290A1-20170302",
  "main_ipcr_label": "G06N502",
  "decision": "PENDING",
  "application_number": "15249342",
  "inventor_list": [
    {
      "inventor_name_last": "Harlow",
      "inventor_name_first": "James D.",
      "inventor_city": "San Jose",
      "inventor_state": "CA",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Kerley",
      "inventor_name_first": "David A.",
      "inventor_city": "Houston",
      "inventor_state": "TX",
      "inventor_country": "US"
    }
  ],
  "abstract": "Methods and systems are provided for implementing axiomatic control of an automorphic dynamical system. An automorphic system architecture for a dynamical system may apply ergodic techniques for axiomatically describing networked computing environments of vast dimensions comprised of a plurality of disparate information resources, processors, memory, storage, analog and digital sensors (as examples) and presenting this plurality of information sources as a singular automorphic resource through a time series. An example system may further implement dynamic axiomatic control and modification of operational parameters, without human intervention, incorporating data from a variety of sources and platforms and over multiple dimensions of context associated with those data.",
  "filing_date": "20160826",
  "patent_number": "None",
  "summary": "<SOH> SUMMARY <EOH>Methods and systems are provided for implementing an automorphic system architecture for a dynamical system, for example using ergodic techniques for axiomatically describing networked computing environments of vast dimensions comprised of a plurality of disparate information resources, processors, memory, storage, analog and digital sensors (as examples) and presenting this plurality of information sources as a singular automorphic resource through a time series. The present invention, in some embodiments, relates to information technology and particularly to an automorphic system architecture for a dynamical system and ergodic techniques (an example being ergodic transforms such as von Neumann ergodic theorems acting in Hilbert spaces) for axiomatically describing networked computing environments of vast dimensions comprised of a plurality of information resources, processors, memory, storage, and analog and digital sensors (as examples), and presenting this plurality of information sources as a singular automorphic resource through a time series. The descriptions of some implementations teach how to create an axiom-controlled, object-oriented, software-based dynamical system for the purpose of federating heterogeneous/homogeneous systems comprised of, for example, operating systems, software applications, database systems, autonomous machinery, human-controlled machinery, and sensors or all types, into self-actuating and self-compiling, highly uncoupled, software systems (or systems of systems) without human intervention or participation even in situations where the components and/or subsystem(s) are not known at the time of system instantiation—for example, machine authorship, compilation, self-maintenance, and self-programming systems. Case Studies An example implementation can be, in one instance, described as an automorphic mobile robot/drone control system using Relational Object Oriented Programming (“ROOP”) to implement axiomatic control...",
  "date_published": "20170302",
  "title": "Axiomatic Control of Automorphic Dynamical Systems",
  "ipcr_labels": [
    "G06N502",
    "G06N708"
  ],
  "_processing_info": {
    "original_size": 112913,
    "optimized_size": 3491,
    "reduction_percent": 96.91
  }
}