{
  "decision": "ACCEPTED",
  "application_number": "15017288",
  "date_published": "20160602",
  "date_produced": "20160518",
  "title": "SYSTEM AND METHOD FOR ACHIEVING HIGH PERFORMANCE DATA FLOW AMONG USER SPACE PROCESSES IN STORAGE SYSTEMS",
  "filing_date": "20160205",
  "inventor_list": [
    {
      "inventor_name_last": "Thelen",
      "inventor_name_first": "Randy",
      "inventor_city": "Mountain View",
      "inventor_state": "CA",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Goodson",
      "inventor_name_first": "Garth",
      "inventor_city": "Fremont",
      "inventor_state": "CA",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Srinivasan",
      "inventor_name_first": "Kiran",
      "inventor_city": "Cupertino",
      "inventor_state": "CA",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Susarla",
      "inventor_name_first": "Sai",
      "inventor_city": "Bangalore",
      "inventor_state": "",
      "inventor_country": "IN"
    }
  ],
  "ipcr_labels": [
    "G06F306",
    "G06F1210",
    "G06F1202"
  ],
  "main_ipcr_label": "G06F306",
  "summary": "<SOH> BRIEF DESCRIPTION OF THE DRAWINGS <EOH>One or more embodiments of the present invention are illustrated by way of example and not limitation in the figures of the accompanying drawings, in which like references indicate similar elements and in which: FIG. 1 illustrates a network storage system in which the present invention can be implemented; FIG. 2 is a high-level block diagram showing an example of the architecture of a storage server; FIG. 3 illustrates an example of storage system configuration with multiple operating systems (OS's) connected to hardware devices through a hypervisor for fault tolerant system implementation; FIG. 4 illustrates an embodiment of Excessive Symmetric Multi-Processing (XSMP), sharing a read-only address space mapping the entire physical memory among multiple processes; FIG. 5 is a flow diagram showing a process in a storage server for sharing read-only address space; FIG. 6 is a flow diagram showing a process in a storage server for data flow using the shared read-only address space; FIG. 7 is a flow diagram showing a process by the kernel in a storage server for enabling an XSMP process to access a physical device; and FIG. 8 illustrates two XSMP processes communicate with each other through common ring buffers. detailed-description description=\"Detailed Description\" end=\"lead\"?",
  "patent_number": "9891839",
  "abstract": "Fault isolation capabilities made available by user space can be provided for a embedded network storage system without sacrificing efficiency. By giving user space processes direct access to specific devices (e.g., network interface cards and storage adapters), processes in a user space can initiate Input/Output requests without issuing system calls (and entering kernel mode). The multiple user spaces processes can initiate requests serviced by a user space device driver by sharing a read-only address space that maps the entire physical memory one-to-one. In addition, a user space process can initiate communication with another user space process by use of transmit and receive queues similar to transmit and receiver queues used by hardware devices. And, a mechanism of ensuring that virtual addresses that work in one address space reference the same physical page in another address space is used.",
  "publication_number": "US20160154584A1-20160602",
  "_processing_info": {
    "original_size": 49918,
    "optimized_size": 3311,
    "reduction_percent": 93.37
  }
}