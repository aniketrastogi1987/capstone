{
  "decision": "ACCEPTED",
  "application_number": "15073258",
  "date_published": "20160707",
  "date_produced": "20160622",
  "title": "REMEDIATION OF SECURITY VULNERABILITIES IN COMPUTER SOFTWARE",
  "filing_date": "20160317",
  "inventor_list": [
    {
      "inventor_name_last": "Tripp",
      "inventor_name_first": "Omer",
      "inventor_city": "Bronx",
      "inventor_state": "NY",
      "inventor_country": "US"
    }
  ],
  "ipcr_labels": [
    "G06F2157"
  ],
  "main_ipcr_label": "G06F2157",
  "summary": "<SOH> SUMMARY OF THE INVENTION <EOH>In one aspect of the invention a method is provided for processing a downgrader specification, the method including constructing a set of candidate downgrader placement locations found within a computer software application, where each of the candidate downgrader placement locations corresponds to a transition between a different pair of instructions within the computer software application, and where each of the transitions participates in any of a plurality of data flows in a set of security-sensitive data flows within the computer software application, applying a downgrader specification to the set of candidate downgrader placement locations, and determining that the downgrader specification provides full coverage of the set of security-sensitive data flows within the computer software application if at least one candidate downgrader placement location within each of the security-sensitive data flows is a member of the set of candidate downgrader placement locations. In another aspect of the invention a method is provided for processing a downgrader specification, the method including constructing a set of candidate downgraders for processing a set of security-sensitive data flows within a computer software application, where each of the security-sensitive data flows is processable by at least one of the candidate downgraders, applying a downgrader specification to the set of candidate downgraders, and determining that the downgrader specification provides full coverage of the set of security-sensitive data flows within the computer software application if each of the security-sensitive data flows is processable by at least one of the candidate downgraders remaining in the set of candidate downgraders. In other aspects of the invention systems and computer program products embodying the invention are provided.",
  "patent_number": "9471790",
  "abstract": "Processing a downgrader specification by constructing a set of candidate downgrader placement locations found within a computer software application, where each of the candidate downgrader placement locations corresponds to a transition between a different pair of instructions within the computer software application, and where each of the transitions participates in any of a plurality of data flows in a set of security-sensitive data flows within the computer software application, applying a downgrader specification to the set of candidate downgrader placement locations, and determining that the downgrader specification provides full coverage of the set of security-sensitive data flows within the computer software application if at least one candidate downgrader placement location within each of the security-sensitive data flows is a member of the set of candidate downgrader placement locations.",
  "publication_number": "US20160196434A1-20160707",
  "_processing_info": {
    "original_size": 34581,
    "optimized_size": 3334,
    "reduction_percent": 90.36
  }
}