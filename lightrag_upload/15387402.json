{
  "date_produced": "20170329",
  "publication_number": "US20170103332A1-20170413",
  "main_ipcr_label": "G06N504",
  "decision": "PENDING",
  "application_number": "15387402",
  "inventor_list": [
    {
      "inventor_name_last": "Kumar",
      "inventor_name_first": "Sailesh",
      "inventor_city": "San Jose",
      "inventor_state": "CA",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Das",
      "inventor_name_first": "Sandip",
      "inventor_city": "San Jose",
      "inventor_state": "CA",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Kongetira",
      "inventor_name_first": "Poonacha",
      "inventor_city": "San Jose",
      "inventor_state": "CA",
      "inventor_country": "US"
    }
  ],
  "abstract": "An aspect of the present disclosure provides a hardware element in a Network on Chip (NoC), wherein the hardware element includes a clock gating circuit configures one or more neighboring hardware elements to activate before receiving new incoming data and to sleep after a defined number of cycles, wherein the defined number of cycles can be counted from a cycle having non-receipt of incoming data and/or having a clearance of all data within an input queue of a source hardware element.",
  "filing_date": "20161221",
  "patent_number": "None",
  "summary": "<SOH> SUMMARY <EOH>Methods and example implementations described herein are generally directed to interconnect architecture, and more specifically, to clock gating for hardware elements of a System on Chip (SoC) and Network on Chip (NoC) interconnecting them. An aspect of the present disclosure provides a hardware element in a Network on Chip (NoC) and a System on Chip (SoC), wherein the hardware element includes a clock gating circuit configures one or more neighboring hardware elements to activate before receiving new incoming data and to sleep after a defined number of cycles, wherein the defined number of cycles can be counted from a cycle having non-receipt of incoming data and having a clearance of all data within an input queue of a source hardware element. In an embodiment, the defined number of cycles can be set based on at least one of a predetermined number of cycles, say 3 or 4 cycles. In another embodiment, the defined number of cycles can be set based a self-learning process associated with one or more conditions of the system. In yet another embodiment, the number of cycles can be configured based on a hysteresis counter for reducing latency penalty due to clock gating and for saving power, wherein the hysteresis counter value can be configured to be set via self-learning based on network traffic and SoC and NoC conditions, and wherein the self-learning applies self-correction to the number of cycles. Any other process/attribute/factor can be incorporated for computing the number of cycles, post which the concerned hardware elements such as routers, bridges, can go to sleep. Another aspect of the present disclosure provides a semiconductor device incorporating a Network on Chip (NoC) and a System on Chip (SoC), wherein the NoC and SoC includes a hardware element having a clock gating circuit configures one or more neighboring hardware elements to activate before receiving new incoming data and to sleep after a defined number of cycles, wherein the def...",
  "date_published": "20170413",
  "title": "CLOCK GATING FOR SYSTEM-ON-CHIP ELEMENTS",
  "ipcr_labels": [
    "G06N504",
    "G06N9900",
    "G06F132"
  ],
  "_processing_info": {
    "original_size": 73787,
    "optimized_size": 3335,
    "reduction_percent": 95.48
  }
}