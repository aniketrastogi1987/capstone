{
  "decision": "ACCEPTED",
  "application_number": "15008192",
  "date_published": "20170615",
  "date_produced": "20170603",
  "title": "SINGLE-STAGE ARBITER/SCHEDULER FOR A MEMORY SYSTEM COMPRISING A VOLATILE MEMORY AND A SHARED CACHE",
  "filing_date": "20160127",
  "inventor_list": [
    {
      "inventor_name_last": "ALAVOINE",
      "inventor_name_first": "OLIVIER",
      "inventor_city": "SAN DIEGO",
      "inventor_state": "CA",
      "inventor_country": "US"
    }
  ],
  "ipcr_labels": [
    "G06F306",
    "G06F1208",
    "G06F1202"
  ],
  "main_ipcr_label": "G06F306",
  "summary": "<SOH> SUMMARY OF THE DISCLOSURE <EOH>Systems, methods, and computer programs are disclosed for scheduling memory transactions. An embodiment of a method comprises determining future memory state data of a dynamic random access memory (DRAM) for a predetermined number of future clock cycles. The DRAM is electrically coupled to a system on chip (SoC). Based on the future memory state data, one of a plurality of pending memory transactions is selected that speculatively optimizes DRAM efficiency. The selected memory transaction is sent to a shared cache controller. If the selected memory transaction results in a cache miss, the selected memory transaction is sent to a DRAM controller. Another embodiment is a system for scheduling memory transactions. The system comprises a volatile memory device and a system on chip (SoC) electrically coupled to the volatile memory. The SoC comprises a shared cached, a cache controller, and a transaction scheduler for scheduling pending memory transactions received from a plurality of memory clients. The transaction scheduler is configured to determine future state data of the volatile memory for a predetermined number of future clock cycles. Based on the future state data, the transaction scheduler selects one of the plurality of pending memory transactions that speculatively optimizes an efficiency of the volatile memory. The transaction scheduler sends the selected memory transaction to the shared cache controller and, if the selected memory transaction results in a cache miss, the selected memory transaction is sent to the volatile memory.",
  "patent_number": "9703493",
  "abstract": "Systems, methods, and computer programs are disclosed for scheduling memory transactions. An embodiment of a method comprises determining future memory state data of a dynamic random access memory (DRAM) for a predetermined number of future clock cycles. The DRAM is electrically coupled to a system on chip (SoC). Based on the future memory state data, one of a plurality of pending memory transactions is selected that speculatively optimizes DRAM efficiency. The selected memory transaction is sent to a shared cache controller. If the selected memory transaction results in a cache miss, the selected memory transaction is sent to a DRAM controller.",
  "publication_number": "US20170168727A1-20170615",
  "_processing_info": {
    "original_size": 49342,
    "optimized_size": 2868,
    "reduction_percent": 94.19
  }
}