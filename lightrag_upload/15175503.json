{
  "date_produced": "20161116",
  "publication_number": "US20160350646A1-20161201",
  "main_ipcr_label": "G06N304",
  "decision": "ACCEPTED",
  "application_number": "15175503",
  "inventor_list": [
    {
      "inventor_name_last": "Leeman-Munk",
      "inventor_name_first": "Samuel Paul",
      "inventor_city": "Raleigh",
      "inventor_state": "NC",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Cox",
      "inventor_name_first": "James Allen",
      "inventor_city": "Cary",
      "inventor_state": "NC",
      "inventor_country": "US"
    }
  ],
  "abstract": "Electronic communications can be normalized using a neural network. For example, a noncanonical communication that includes multiple terms can be received. The noncanonical communication can be preprocessed by (I) generating a vector including multiple characters from a term of the multiple terms; and (II) repeating a substring of the term in the vector such that a last character of the substring is positioned in a last position in the vector. The vector can be transmitted to a neural network configured to receive the vector and generate multiple probabilities based on the vector. A normalized version of the noncanonical communication can be determined using one or more of the multiple probabilities generated by the neural network. Whether the normalized version of the noncanonical communication should be outputted can also be determined using at least one of the multiple probabilities generated by the neural network.",
  "filing_date": "20160607",
  "patent_number": "9595002",
  "summary": "<SOH> SUMMARY <EOH>In one example, a computer readable medium comprising program code executable by a processor is provided. The program code can cause the processor to receive an electronic representation of a noncanonical communication. The noncanonical communication can include multiple terms. The program code can cause the processor to preprocess the noncanonical communication by generating a vector comprising a plurality of characters from a term of the multiple terms. The vector can have a predetermined length greater than a length of the term. The program code can cause the processor to preprocess the noncanonical communication by repeating a substring of the term in the vector such that a last character of the substring is positioned in a last position in the vector. The last character of the substring can be the same as the last character in the term. The program code can cause the processor to transmit the vector to a neural network comprising at least two bidirectional gated recurrent neural network (BGRNN) layers. The neural network can be configured to receive the vector and generate multiple probabilities based on the vector. The program code can cause the processor to determine a normalized version of the noncanonical communication using one or more of the multiple probabilities generated by the neural network. The program code can cause the processor to determine that the normalized version of the noncanonical communication should be outputted or should not be outputted using at least one of the multiple probabilities generated by the neural network. In another example, a method is provided that can include receiving an electronic representation of a noncanonical communication. The noncanonical communication can include multiple terms. The method can include preprocessing the noncanonical communication by generating a vector comprising a plurality of characters from a term of the multiple terms. The vector can have a predetermined length greater than...",
  "date_published": "20161201",
  "title": "NORMALIZING ELECTRONIC COMMUNICATIONS USING A NEURAL NETWORK",
  "ipcr_labels": [
    "G06N304",
    "H04W400"
  ],
  "_processing_info": {
    "original_size": 134832,
    "optimized_size": 3647,
    "reduction_percent": 97.3
  }
}