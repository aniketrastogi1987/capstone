{
  "date_produced": "20160720",
  "publication_number": "US20160224898A1-20160804",
  "main_ipcr_label": "G06N504",
  "decision": "PENDING",
  "application_number": "15010121",
  "inventor_list": [
    {
      "inventor_name_last": "RYCKBOSCH",
      "inventor_name_first": "Frederick",
      "inventor_city": "Sint-Amandsberg",
      "inventor_state": "",
      "inventor_country": "BE"
    },
    {
      "inventor_name_last": "POLFLIET",
      "inventor_name_first": "Stijn",
      "inventor_city": "Sint-Pauwels",
      "inventor_state": "",
      "inventor_country": "BE"
    },
    {
      "inventor_name_last": "DE VYLDER",
      "inventor_name_first": "Bart",
      "inventor_city": "Lokeren",
      "inventor_state": "",
      "inventor_country": "BE"
    }
  ],
  "abstract": "An application performance analyzer adapted to analyze the performance of one or more applications running on IT infrastructure, comprises: a data collection engine collecting performance metrics for one or more applications running on the IT infrastructure; an anomaly detection engine analyzing the performance metrics and detecting anomalies, i.e. performance metrics whose values deviate from historic values with a deviation that exceeds a predefined threshold; a correlation engine detecting dependencies between plural anomalies, and generating anomaly clusters, each anomaly cluster consisting of anomalies that are correlated through one or more of the dependencies; a ranking engine ranking anomalies within an anomaly cluster; and a source detection engine pinpointing a problem source from the lowest ranked anomaly in an anomaly cluster.",
  "filing_date": "20160129",
  "patent_number": "nan",
  "summary": "<SOH> SUMMARY OF THE INVENTION <EOH>It is an objective of the present invention to disclose a method and system for application performance analysis that resolves one or more of the above shortcomings of existing solutions. More particularly, it is an objective of the present invention to provide a method and system for application performance analysis that is able to pinpoint the source of problems without being intrusive and without generating excessive overhead. According to the present invention, this objective is achieved and the above mentioned drawbacks and disadvantages of existing APM systems are overcome by the application performance analyzer defined by claim 1 , adapted to analyze the performance of one or more applications running on IT infrastructure, and comprising: a data collection engine adapted to collect performance metrics for the one or more applications running on the IT infrastructure; an anomaly detection engine adapted to analyze the performance metrics and to detect anomalies, i.e. performance metrics whose values deviate from historic values with a deviation that exceeds a predefined threshold; a correlation engine adapted to detect dependencies between plural anomalies, and to generate anomaly clusters, each anomaly cluster consisting of anomalies that are correlated through one or more of the dependencies; a ranking engine adapted to rank anomalies within an anomaly cluster; and a source detection engine adapted to pinpoint a problem source from the lowest ranked anomaly in an anomaly cluster. Thus, the present invention concerns an application performance analyzer that collects performance metrics. The performance metrics, e.g. CPU usage, disk occupancy, memory usage, response time, etc., are obtained either from a lightweight agent installed on the server(s) that is/are monitored or alternatively they are obtained elsewhere, e.g. from a deep inspection monitoring system that runs in parallel and already has an agent installed on the s...",
  "date_published": "20160804",
  "title": "APPLICATION PERFORMANCE ANALYZER AND CORRESPONDING METHOD",
  "ipcr_labels": [
    "G06N504",
    "G06N9900"
  ],
  "_processing_info": {
    "original_size": 54908,
    "optimized_size": 3710,
    "reduction_percent": 93.24
  }
}