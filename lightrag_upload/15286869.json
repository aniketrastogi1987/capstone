{
  "date_produced": "20170104",
  "publication_number": "US20170017884A1-20170119",
  "main_ipcr_label": "G06N502",
  "decision": "ACCEPTED",
  "application_number": "15286869",
  "inventor_list": [
    {
      "inventor_name_last": "Sandeep",
      "inventor_name_first": "Vedula S.",
      "inventor_city": "Hyderabad",
      "inventor_state": "",
      "inventor_country": "IN"
    },
    {
      "inventor_name_last": "Singh",
      "inventor_name_first": "Sanjay K.",
      "inventor_city": "Bangalore",
      "inventor_state": "",
      "inventor_country": "IN"
    }
  ],
  "abstract": "According to one exemplary embodiment, a method for solving combinatorial optimization problems is provided. The method may include receiving a plurality of problem instance parameters associated with a graph. The method may also include determining a dynamic path change indicator exists. The method may then include initializing the graph based on the determining the dynamic path change indicator does not exist. The method may further include inserting a placeholder node and at least one placeholder node edge based on the determining the dynamic path change indicator exists. The method may also include reinitializing the graph with the inserted place holder node and the at least one placeholder node edge. The method may then include initializing the reinitialized graph. The method may further include executing a hybrid algorithm on the initialized graph or on the reinitialized graph, wherein the hybrid algorithm comprises an ant colony optimization algorithm and a genetic algorithm.",
  "filing_date": "20161006",
  "patent_number": "9679246",
  "summary": "<SOH> SUMMARY <EOH>According to one exemplary embodiment, a method for solving combinatorial optimization problems is provided. The method may include receiving a plurality of problem instance parameters associated with a graph. The method may also include determining when a dynamic path change indicator exists. The method may then include initializing the graph based on the determining the dynamic path change indicator does not exist. The method may further include inserting a placeholder node and at least one placeholder node edge based on the determining the dynamic path change indicator does exist. The method may also include reinitializing the graph with the inserted place holder node and the at least one placeholder node edge. The method may then include initializing the reinitialized graph. The method may further include executing a hybrid algorithm on the initialized graph or on the reinitialized graph, wherein the hybrid algorithm comprises an ant colony optimization algorithm and a genetic algorithm. According to another exemplary embodiment, a computer system for solving combinatorial optimization problems is provided. The computer system may include one or more processors, one or more computer-readable memories, one or more computer-readable tangible storage devices, and program instructions stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories, wherein the computer system is capable of performing a method. The method may include receiving a plurality of problem instance parameters associated with a graph. The method may also include determining when a dynamic path change indicator exists. The method may then include initializing the graph based on the determining the dynamic path change indicator does not exist. The method may further include inserting a placeholder node and at least one placeholder node edge based on the determining the dynamic ...",
  "date_published": "20170119",
  "title": "SOLVING VEHICLE ROUTING PROBLEMS USING EVOLUTIONARY COMPUTING TECHNIQUES",
  "ipcr_labels": [
    "G06N502",
    "G06N9900"
  ],
  "_processing_info": {
    "original_size": 62539,
    "optimized_size": 3723,
    "reduction_percent": 94.05
  }
}