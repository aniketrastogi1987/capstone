{
  "decision": "PENDING",
  "application_number": "15167987",
  "date_published": "20171130",
  "date_produced": "20171115",
  "title": "HIERARCHICAL LOSSLESS COMPRESSION AND NULL DATA SUPPORT",
  "filing_date": "20160527",
  "inventor_list": [
    {
      "inventor_name_last": "Seiler",
      "inventor_name_first": "Larry",
      "inventor_city": "Boylston",
      "inventor_state": "MA",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Surti",
      "inventor_name_first": "Prasoonkumar",
      "inventor_city": "Folsom",
      "inventor_state": "CA",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Navale",
      "inventor_name_first": "Aditya",
      "inventor_city": "Folsom",
      "inventor_state": "CA",
      "inventor_country": "US"
    }
  ],
  "ipcr_labels": [
    "G06T120",
    "G06T160",
    "G06F121009",
    "G06F306"
  ],
  "main_ipcr_label": "G06T120",
  "summary": "<SOH> BRIEF DESCRIPTION OF THE DRAWINGS <EOH>FIG. 1 illustrates a flowchart of a methodological implementation in accordance with implementations as described herein to use meta-data to detect null accesses, in accordance with implementations as described herein. FIG. 2 illustrates a flowchart of a methodological implementation that uses null probing to efficiently detect null data accesses, in accordance with implementations as described herein. FIG. 3 illustrates a flowchart of a methodological implementation in that correctly processes null data during a fast clear operation, in accordance with implementations as described herein. FIG. 4 illustrates a metadata format that includes an escape code to allow specifying the presence of null data, which may be employed with an implementation in accordance with implementations as described herein. FIG. 5 illustrates a metadata format that using a pair of 2-bit metadata leaf nodes to produce a hierarchical 4-bit meta-data value, which may be employed in an implementation in accordance with implementations as described herein. FIG. 6 illustrates example scenarios of compacting the results of separately compressing a pair of compression blocks, in accordance with implementations as described herein. FIG. 7 illustrates an example process illustrating how to select one of several possible compression choices to trade off wasted bandwidth against the compression ration obtained, in accordance with the technology described herein. FIG. 8 is a block diagram of a data processing system according to an embodiment. FIG. 9 is a block diagram of an embodiment of a processor having one or more processor cores, an integrated memory controller, and an integrated graphics processor. FIG. 10 is a block diagram of one embodiment of a graphics processor which may be a discrete graphics processing unit, or may be graphics processor integrated with a plurality of processing cores. FIG. 11 is a block diagram of an embodiment of a graphics pro...",
  "patent_number": "None",
  "abstract": "Described herein are computer graphics technologies to facilitate effective and efficient memory handling for blocks of memory including texture maps. More particularly, one or more implementations described herein facilitates hierarchical lossless compression of memory with null data support for memory resources, including texture maps. More particularly still, one or more implementations described herein facilitates the use of meta-data for lossless compression and the support of null encodings for Tiled Resources. This technology also permits use of the fast-clear compression method, where meta-data specifies that the entire access should return some specified clear value.",
  "publication_number": "US20170345122A1-20171130",
  "_processing_info": {
    "original_size": 163838,
    "optimized_size": 3555,
    "reduction_percent": 97.83
  }
}