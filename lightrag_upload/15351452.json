{
  "decision": "PENDING",
  "application_number": "15351452",
  "date_published": "20170817",
  "date_produced": "20170802",
  "title": "Fast Pattern Discovery for Log Analytics",
  "filing_date": "20161115",
  "inventor_list": [
    {
      "inventor_name_last": "Debnath",
      "inventor_name_first": "Biplob",
      "inventor_city": "Princeton",
      "inventor_state": "NJ",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Xu",
      "inventor_name_first": "Jianwu",
      "inventor_city": "Lawrenceville",
      "inventor_state": "NJ",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Zhang",
      "inventor_name_first": "Hui",
      "inventor_city": "Princeton Junction",
      "inventor_state": "NJ",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Jiang",
      "inventor_name_first": "Guofei",
      "inventor_city": "Princeton",
      "inventor_state": "NJ",
      "inventor_country": "US"
    },
    {
      "inventor_name_last": "Hamooni",
      "inventor_name_first": "Hossein",
      "inventor_city": "Albuquerque",
      "inventor_state": "NM",
      "inventor_country": "US"
    }
  ],
  "ipcr_labels": [
    "G06K946",
    "G06F1730"
  ],
  "main_ipcr_label": "G06K946",
  "summary": "<SOH> SUMMARY <EOH>Systems and methods are disclosed for parsing logs from arbitrary or unknown systems or applications by capturing heterogeneous logs from the arbitrary or unknown systems or applications; generating one pattern for every unique log message; building a pattern hierarchy tree by grouping patterns based on similarity metrics, and for every group it generates one pattern by combing all constituting patterns of that group; and selecting a set of patterns from the pattern hierarchy tree. Advantages of the system may include one or more of the following. The system does not need any input parameters from a user. A fast and memory efficient clustering process is provided which is specially designed for logs generated by computer programs. A fast pattern recognition process is provided that is specially designed to work with logs generated by computer programs. The iterative process combines clustering and pattern recognition algorithms and generates a hierarchy of patterns. From this hierarchy a user can select a set of patterns to meet her specific use-cases. The system automatically detects anomalies in heterogeneous log sources generated by modern day devices. The system can process logs generated by sensors, computer software, or internet-of things. The system does not need any human input or previous gold standard of common patterns. The system is completely automated, and relies on unsupervised machine learning algorithms to alert the users of any anomalies in the system. Monitoring and triggering alerts is an essential “first-attack” mechanism to quickly capture problems in large-scale production software. Furthermore it is important, to localize the symptom, and its potential causes as soon as possible. The system provides a platform that can plug-in data analytics and models and can push alerts, their potential causes using advanced machine-learning techniques. The system can run on any unmodified logs, without prior knowledge of the structure.",
  "patent_number": "None",
  "abstract": "Systems and methods are disclosed for parsing logs from arbitrary or unknown systems or applications by capturing heterogeneous logs from the arbitrary or unknown systems or applications; generating one pattern for every unique log message; building a pattern hierarchy tree by grouping patterns based on similarity metrics, and for every group it generates one pattern by combing all constituting patterns of that group; and selecting a set of patterns from the pattern hierarchy tree.",
  "publication_number": "US20170236023A1-20170817",
  "_processing_info": {
    "original_size": 32976,
    "optimized_size": 3629,
    "reduction_percent": 89.0
  }
}